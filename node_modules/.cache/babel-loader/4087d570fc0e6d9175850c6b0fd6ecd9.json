{"ast":null,"code":"var _jsxFileName = \"/home/kieran/Documents/Online Learning/Udemy/Modern_React_Redux/season_geotracking/src/SeasonDisplay.js\";\nimport React from 'react';\n\nconst getSeason = (lat, month) => {\n  if (lat > 0) {\n    if (month > 1 && month < 5) {\n      return 'spring';\n    } else if (month > 4 && month < 8) {\n      return 'summer';\n    } else if (month > 7 && month > 10) {\n      return 'fall';\n    } else {\n      return 'winter';\n    }\n  } else if (lat < 0) {\n    if (month > 1 && month < 5) {\n      return 'fall';\n    } else if (month > 4 && month < 8) {\n      return 'winter';\n    } else if (month > 7 && month > 10) {\n      return 'spring';\n    } else {\n      return 'summer';\n    }\n  }\n};\n\nconst fallLogo = require('./images/fall.jpg');\n\nconst SeasonDisplay = props => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  console.log(season);\n\n  const seasonLogo = () => {\n    if (season === 'winter') {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Winter\");\n    } else if (season === 'spring') {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Spring\");\n    } else if (season === 'summer') {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Summer\");\n    } else {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"fall\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n};\n\nexport default SeasonDisplay;","map":{"version":3,"sources":["/home/kieran/Documents/Online Learning/Udemy/Modern_React_Redux/season_geotracking/src/SeasonDisplay.js"],"names":["React","getSeason","lat","month","fallLogo","require","SeasonDisplay","props","season","Date","getMonth","console","log","seasonLogo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACjC,MAAID,GAAG,GAAG,CAAV,EAAa;AACZ,QAAGC,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAxB,EAA2B;AAC1B,aAAO,QAAP;AACA,KAFD,MAEO,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAClC,aAAO,QAAP;AACA,KAFM,MAEA,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAzB,EAA6B;AACnC,aAAO,MAAP;AACA,KAFM,MAEA;AACN,aAAO,QAAP;AACA;AACD,GAVD,MAUO,IAAID,GAAG,GAAG,CAAV,EAAa;AACnB,QAAGC,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAxB,EAA2B;AAC1B,aAAO,MAAP;AACA,KAFD,MAEO,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAClC,aAAO,QAAP;AACA,KAFM,MAEA,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAzB,EAA6B;AACnC,aAAO,QAAP;AACA,KAFM,MAEA;AACN,aAAO,QAAP;AACA;AACD;AACD,CAtBD;;AAwBA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAxB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE9B,QAAMC,MAAM,GAAGP,SAAS,CAACM,KAAK,CAACL,GAAP,EAAY,IAAIO,IAAJ,GAAWC,QAAX,EAAZ,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACxB,QAAIL,MAAM,KAAK,QAAf,EAAyB;AACxB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACA,KAFD,MAEO,IAAIA,MAAM,KAAK,QAAf,EAAyB;AAC/B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACA,KAFM,MAEA,IAAIA,MAAM,KAAK,QAAf,EAAyB;AAC/B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACA,KAFM,MAEA;AACN,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;AACD,GAVD;;AAYA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AAMA,CAvBD;;AAyBA,eAAeF,aAAf","sourcesContent":["import React from 'react';\n\n\nconst getSeason = (lat, month) => {\n\tif (lat > 0) {\n\t\tif(month > 1 && month < 5) {\n\t\t\treturn 'spring';\n\t\t} else if (month > 4 && month < 8) {\n\t\t\treturn 'summer';\n\t\t} else if (month > 7 && month > 10) {\n\t\t\treturn 'fall';\n\t\t} else {\n\t\t\treturn 'winter';\n\t\t}\n\t} else if (lat < 0) {\n\t\tif(month > 1 && month < 5) {\n\t\t\treturn 'fall';\n\t\t} else if (month > 4 && month < 8) {\n\t\t\treturn 'winter';\n\t\t} else if (month > 7 && month > 10) {\n\t\t\treturn 'spring';\n\t\t} else {\n\t\t\treturn 'summer';\n\t\t}\n\t}\n}\n\nconst fallLogo = require('./images/fall.jpg')\n\nconst SeasonDisplay = props => {\n\n\tconst season = getSeason(props.lat, new Date().getMonth());\n\tconsole.log(season);\n\n\tconst seasonLogo = () => {\n\t\tif (season === 'winter') {\n\t\t\treturn <h1>Winter</h1>\n\t\t} else if (season === 'spring') {\n\t\t\treturn <h1>Spring</h1>\n\t\t} else if (season === 'summer') {\n\t\t\treturn <h1>Summer</h1>\n\t\t} else {\n\t\t\treturn <h1>fall</h1>\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\n\t\t</div>\n\n\t);\n};\n\nexport default SeasonDisplay;\n"]},"metadata":{},"sourceType":"module"}