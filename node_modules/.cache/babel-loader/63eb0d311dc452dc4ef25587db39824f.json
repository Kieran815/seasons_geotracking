{"ast":null,"code":"var _jsxFileName = \"/home/kieran/Documents/Online Learning/Udemy/Modern_React_Redux/season_geotracking/src/SeasonDisplay.js\";\nimport React from 'react';\nconst seasonConfig = {\n  spring: {\n    text: \"Mother Earth has Awoken\",\n    icon: 'umbrella'\n  },\n  summer: {\n    text: \"Surf's Up, Son!!!\",\n    icon: 'sun'\n  },\n  fall: {\n    text: \"It's Fall, Bitches!!!\",\n    icon: 'leaf'\n  },\n  winter: {\n    text: \"Cuz I'm... Cold-Blooooded!!!\",\n    icon: 'snowflake'\n  }\n};\n\nconst getSeason = (lat, month) => {\n  if (lat > 0) {\n    if (month > 1 && month < 5) {\n      return \"spring\";\n    } else if (month > 4 && month < 8) {\n      return \"summer\";\n    } else if (month > 7 && month < 10) {\n      return \"fall\";\n    } else {\n      return \"winter\";\n    }\n  } else if (lat < 0) {\n    if (month > 1 && month < 5) {\n      return \"fall\";\n    } else if (month > 4 && month < 8) {\n      return \"winter\";\n    } else if (month > 7 && month < 10) {\n      return \"spring\";\n    } else {\n      return \"summer\";\n    }\n  }\n};\n\nconst SeasonDisplay = props => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const _seasonConfig$season = seasonConfig[season],\n        text = _seasonConfig$season.text,\n        iconName = _seasonConfig$season.iconName;\n  /*\n  \tconst seasonMessage = (function seasonSwitch(season) {\n  \t\tswitch(season) {\n  \t\t\tcase \"winter\":\n  \t\t\t\treturn \"The Weather Outside is Frightful\";\n  \t\t\t\tbreak;\n  \t\t\tcase \"spring\":\n  \t\t\t\treturn \"Mother Earth has Awoken\";\n  \t\t\t\tbreak;\n  \t\t\tcase \"summer\":\n  \t\t\t\treturn \"Surf's Up, Son!!!\";\n  \t\t\t\tbreak;\n  \t\t\tcase \"fall\":\n  \t\t\t\treturn \"It's Fall, Bitches!!!\";\n  \t\t\t\tbreak;\n  \t\t\tdefault:\n  \t\t\t\treturn \"Not Working...\"\n  \t\t}\n  \t})(season);\n  \n  \t\tconst seasonIcon = (function seasonLogo(season) {\n  \t\t\tlet icon;\n  \t\t\tswitch(season) {\n  \t\t\t\tcase \"winter\":\n  \t\t\t\t\ticon = 'snowflake';\n  \t\t\t\t\tbreak;\n  \t\t\t\tcase \"spring\":\n  \t\t\t\t\ticon = 'umbrella'\n  \t\t\t\t\tbreak;\n  \t\t\t\tcase \"summer\":\n  \t\t\t\t\ticon = 'sun';\n  \t\t\t\t\tbreak;\n  \t\t\t\tcase \"fall\":\n  \t\t\t\t\ticon = 'leaf'\n  \t\t\t\t\tbreak;\n  \t\t\t\tdefault:\n  \t\t\t\t\ticon = 'question circle'\n  \t\t\t}\n  \t\t\treturn <i className={`${icon} icon`} />\n  \t\t})(season);\n  */\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"\".concat(iconName, \" icon\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, season), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, seasonMessage), React.createElement(\"i\", {\n    className: \"\".concat(iconName, \" icon\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }));\n};\n\nexport default SeasonDisplay;","map":{"version":3,"sources":["/home/kieran/Documents/Online Learning/Udemy/Modern_React_Redux/season_geotracking/src/SeasonDisplay.js"],"names":["React","seasonConfig","spring","text","icon","summer","fall","winter","getSeason","lat","month","SeasonDisplay","props","season","Date","getMonth","iconName","seasonMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,MAAM,EAAE;AACPC,IAAAA,IAAI,EAAE,yBADC;AAEPC,IAAAA,IAAI,EAAE;AAFC,GADY;AAKpBC,EAAAA,MAAM,EAAE;AACPF,IAAAA,IAAI,EAAE,mBADC;AAEPC,IAAAA,IAAI,EAAE;AAFC,GALY;AASpBE,EAAAA,IAAI,EAAE;AACLH,IAAAA,IAAI,EAAE,uBADD;AAELC,IAAAA,IAAI,EAAE;AAFD,GATc;AAapBG,EAAAA,MAAM,EAAE;AACPJ,IAAAA,IAAI,EAAE,8BADC;AAEPC,IAAAA,IAAI,EAAE;AAFC;AAbY,CAArB;;AAoBA,MAAMI,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACjC,MAAID,GAAG,GAAG,CAAV,EAAa;AACZ,QAAGC,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAxB,EAA2B;AAC1B,aAAO,QAAP;AACA,KAFD,MAEO,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAClC,aAAO,QAAP;AACA,KAFM,MAEA,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAzB,EAA6B;AACnC,aAAO,MAAP;AACA,KAFM,MAEA;AACN,aAAO,QAAP;AACA;AACD,GAVD,MAUO,IAAID,GAAG,GAAG,CAAV,EAAa;AACnB,QAAGC,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAxB,EAA2B;AAC1B,aAAO,MAAP;AACA,KAFD,MAEO,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AAClC,aAAO,QAAP;AACA,KAFM,MAEA,IAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAzB,EAA6B;AACnC,aAAO,QAAP;AACA,KAFM,MAEA;AACN,aAAO,QAAP;AACA;AACD;AACD,CAtBD;;AAwBA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC9B,QAAMC,MAAM,GAAGL,SAAS,CAACI,KAAK,CAACH,GAAP,EAAY,IAAIK,IAAJ,GAAWC,QAAX,EAAZ,CAAxB;AAD8B,+BAEHd,YAAY,CAACY,MAAD,CAFT;AAAA,QAEtBV,IAFsB,wBAEtBA,IAFsB;AAAA,QAEhBa,QAFgB,wBAEhBA,QAFgB;AAI/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CC,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC;AAAG,IAAA,SAAS,YAAKA,QAAL,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,MAAL,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,aAAL,CAJD,EAKC;AAAG,IAAA,SAAS,YAAKD,QAAL,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,CADD;AAcA,CA5DD;;AA8DA,eAAeL,aAAf","sourcesContent":["import React from 'react';\n\nconst seasonConfig = {\n\tspring: {\n\t\ttext: \"Mother Earth has Awoken\",\n\t\ticon: 'umbrella'\n\t},\n\tsummer: {\n\t\ttext: \"Surf's Up, Son!!!\",\n\t\ticon: 'sun'\n\t},\n\tfall: {\n\t\ttext: \"It's Fall, Bitches!!!\",\n\t\ticon: 'leaf'\n\t},\n\twinter: {\n\t\ttext: \"Cuz I'm... Cold-Blooooded!!!\",\n\t\ticon: 'snowflake'\n\t}\n};\n\n\nconst getSeason = (lat, month) => {\n\tif (lat > 0) {\n\t\tif(month > 1 && month < 5) {\n\t\t\treturn \"spring\";\n\t\t} else if (month > 4 && month < 8) {\n\t\t\treturn \"summer\";\n\t\t} else if (month > 7 && month < 10) {\n\t\t\treturn \"fall\";\n\t\t} else {\n\t\t\treturn \"winter\";\n\t\t}\n\t} else if (lat < 0) {\n\t\tif(month > 1 && month < 5) {\n\t\t\treturn \"fall\";\n\t\t} else if (month > 4 && month < 8) {\n\t\t\treturn \"winter\";\n\t\t} else if (month > 7 && month < 10) {\n\t\t\treturn \"spring\";\n\t\t} else {\n\t\t\treturn \"summer\";\n\t\t}\n\t}\n}\n\nconst SeasonDisplay = props => {\n\tconst season = getSeason(props.lat, new Date().getMonth());\n\tconst { text, iconName } = seasonConfig[season];\n\n/*\n\tconst seasonMessage = (function seasonSwitch(season) {\n\t\tswitch(season) {\n\t\t\tcase \"winter\":\n\t\t\t\treturn \"The Weather Outside is Frightful\";\n\t\t\t\tbreak;\n\t\t\tcase \"spring\":\n\t\t\t\treturn \"Mother Earth has Awoken\";\n\t\t\t\tbreak;\n\t\t\tcase \"summer\":\n\t\t\t\treturn \"Surf's Up, Son!!!\";\n\t\t\t\tbreak;\n\t\t\tcase \"fall\":\n\t\t\t\treturn \"It's Fall, Bitches!!!\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"Not Working...\"\n\t\t}\n\t})(season);\n\n\t\tconst seasonIcon = (function seasonLogo(season) {\n\t\t\tlet icon;\n\t\t\tswitch(season) {\n\t\t\t\tcase \"winter\":\n\t\t\t\t\ticon = 'snowflake';\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"spring\":\n\t\t\t\t\ticon = 'umbrella'\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"summer\":\n\t\t\t\t\ticon = 'sun';\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fall\":\n\t\t\t\t\ticon = 'leaf'\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\ticon = 'question circle'\n\t\t\t}\n\t\t\treturn <i className={`${icon} icon`} />\n\t\t})(season);\n*/\n\n\treturn (\n\t\t<div>\n\n\t\t\t<i className={`${iconName} icon`} />\n\t\t\t<h1>{season}</h1>\n\t\t\t<h2>{seasonMessage}</h2>\n\t\t\t<i className={`${iconName} icon`} />\n\n\n\n\t\t</div>\n\n\n);\n};\n\nexport default SeasonDisplay;\n"]},"metadata":{},"sourceType":"module"}