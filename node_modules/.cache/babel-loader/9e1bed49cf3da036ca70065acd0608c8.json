{"ast":null,"code":"var _jsxFileName = \"/home/kieran/Documents/Online Learning/Udemy/Modern_React_Redux/season_geotracking/src/SeasonDisplay.js\";\nimport React from 'react';\nconst seasonConfig = {\n  spring: {\n    text: \"Mother Earth has Awoken\",\n    icon: 'umbrella'\n  },\n  summer: {\n    text: \"Surf's Up, Son!!!\",\n    icon: 'sun'\n  },\n  fall: {\n    text: \"It's Fall, Bitches!!!\",\n    icon: 'leaf'\n  },\n  winter: {\n    text: \"Cuz I'm... Cold-Blooooded!!!\",\n    icon: 'snowflake'\n  }\n};\n\nconst getSeason = (lat, month) => {\n  if (lat > 0) {\n    if (month > 1 && month < 5) {\n      return \"spring\";\n    } else if (month > 4 && month < 8) {\n      return \"summer\";\n    } else if (month > 7 && month < 10) {\n      return \"fall\";\n    } else {\n      return \"winter\";\n    }\n  } else if (lat < 0) {\n    if (month > 1 && month < 5) {\n      return \"fall\";\n    } else if (month > 4 && month < 8) {\n      return \"winter\";\n    } else if (month > 7 && month < 10) {\n      return \"spring\";\n    } else {\n      return \"summer\";\n    }\n  }\n};\n\nconst SeasonDisplay = props => {\n  const season = getSeason(props.lat, new Date().getMonth());\n\n  const seasonMessage = function seasonSwitch(season) {\n    switch (season) {\n      case \"winter\":\n        return \"The Weather Outside is Frightful\";\n        break;\n\n      case \"spring\":\n        return \"Mother Earth has Awoken\";\n        break;\n\n      case \"summer\":\n        return \"Surf's Up, Son!!!\";\n        break;\n\n      case \"fall\":\n        return \"It's Fall, Bitches!!!\";\n        break;\n\n      default:\n        return \"Not Working...\";\n    }\n  }(season);\n\n  const seasonIcon = function seasonLogo(season) {\n    let icon;\n\n    switch (season) {\n      case \"winter\":\n        icon = 'snowflake';\n        break;\n\n      case \"spring\":\n        icon = 'umbrella';\n        break;\n\n      case \"summer\":\n        icon = 'sun';\n        break;\n\n      case \"fall\":\n        icon = 'leaf';\n        break;\n\n      default:\n        icon = 'question circle';\n    }\n\n    return React.createElement(\"i\", {\n      className: \"\".concat(icon, \" icon\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    });\n  }(season);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, seasonIcon), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, season), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, seasonMessage), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, seasonIcon));\n};\n\nexport default SeasonDisplay;","map":{"version":3,"sources":["/home/kieran/Documents/Online Learning/Udemy/Modern_React_Redux/season_geotracking/src/SeasonDisplay.js"],"names":["React","seasonConfig","spring","text","icon","summer","fall","winter","getSeason","lat","month","SeasonDisplay","props","season","Date","getMonth","seasonMessage","seasonSwitch","seasonIcon","seasonLogo"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst seasonConfig = {\n\tspring: {\n\t\ttext: \"Mother Earth has Awoken\",\n\t\ticon: 'umbrella'\n\t},\n\tsummer: {\n\t\ttext: \"Surf's Up, Son!!!\",\n\t\ticon: 'sun'\n\t},\n\tfall: {\n\t\ttext: \"It's Fall, Bitches!!!\",\n\t\ticon: 'leaf'\n\t},\n\twinter: {\n\t\ttext: \"Cuz I'm... Cold-Blooooded!!!\",\n\t\ticon: 'snowflake'\n\t}\n};\n\n\nconst getSeason = (lat, month) => {\n\tif (lat > 0) {\n\t\tif(month > 1 && month < 5) {\n\t\t\treturn \"spring\";\n\t\t} else if (month > 4 && month < 8) {\n\t\t\treturn \"summer\";\n\t\t} else if (month > 7 && month < 10) {\n\t\t\treturn \"fall\";\n\t\t} else {\n\t\t\treturn \"winter\";\n\t\t}\n\t} else if (lat < 0) {\n\t\tif(month > 1 && month < 5) {\n\t\t\treturn \"fall\";\n\t\t} else if (month > 4 && month < 8) {\n\t\t\treturn \"winter\";\n\t\t} else if (month > 7 && month < 10) {\n\t\t\treturn \"spring\";\n\t\t} else {\n\t\t\treturn \"summer\";\n\t\t}\n\t}\n}\n\nconst SeasonDisplay = props => {\n\tconst season = getSeason(props.lat, new Date().getMonth());\n\n\tconst seasonMessage = (function seasonSwitch(season) {\n\t\tswitch(season) {\n\t\t\tcase \"winter\":\n\t\t\t\treturn \"The Weather Outside is Frightful\";\n\t\t\t\tbreak;\n\t\t\tcase \"spring\":\n\t\t\t\treturn \"Mother Earth has Awoken\";\n\t\t\t\tbreak;\n\t\t\tcase \"summer\":\n\t\t\t\treturn \"Surf's Up, Son!!!\";\n\t\t\t\tbreak;\n\t\t\tcase \"fall\":\n\t\t\t\treturn \"It's Fall, Bitches!!!\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"Not Working...\"\n\t\t}\n\t})(season);\n\n\t\tconst seasonIcon = (function seasonLogo(season) {\n\t\t\tlet icon;\n\t\t\tswitch(season) {\n\t\t\t\tcase \"winter\":\n\t\t\t\t\ticon = 'snowflake';\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"spring\":\n\t\t\t\t\ticon = 'umbrella'\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"summer\":\n\t\t\t\t\ticon = 'sun';\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fall\":\n\t\t\t\t\ticon = 'leaf'\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\ticon = 'question circle'\n\t\t\t}\n\t\t\treturn <i className={`${icon} icon`} />\n\t\t})(season);\n\n\treturn (\n\t\t<div>\n\n\t\t\t<p>{seasonIcon}</p>\n\t\t\t<h1>{season}</h1>\n\t\t\t<h2>{seasonMessage}</h2>\n\t\t\t<p>{seasonIcon}</p>\n\n\n\n\t\t</div>\n\n\n);\n};\n\nexport default SeasonDisplay;\n"]},"metadata":{},"sourceType":"module"}